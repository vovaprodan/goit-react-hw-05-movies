{"version":3,"file":"static/js/869.5dd22306.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/pages/MovieDetails.styled.js","components/pages/MovieDetails.jsx","servise/movies.api.js"],"sourcesContent":["import { fetchCreditsApi  } from '../../servise/movies.api';\nimport { useEffect, useState } from \"react\";\n\n\nconst Cast = ({castId}) => {\n    const [actors, setActors] = useState([]);\n    \n    useEffect(() => {\n         \n        fetchCreditsApi(castId).then(resp => {\n            setActors(resp.cast)\n           \n            \n\n    })\n     }, [castId]);\n    \n   \n  \n\n    return <ul>\n        {actors.map(actor => {\n            return <li key={actor.id}> \n                {!actor.profile_path ? '' : <img width={100} src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`} alt={actor.original_name} />}\n                <p>{actor.original_name}</p>\n                <p>Character: {actor.character}</p>\n            </li>  \n           \n        })\n\n        }\n       \n    </ul>\n}\nexport default Cast;","import { fetchReviewsApi  } from '../../servise/movies.api';\nimport { useEffect, useState} from \"react\";\n\n\nconst Reviews = ({reviewsId}) => {\n    const [reviews, setReviews] = useState([]);\n    \n    useEffect(() => {\n         \n        fetchReviewsApi(reviewsId).then(resp => {\n            setReviews(resp.results)\n\n    })\n     }, [reviewsId]);\n    \n   \n  \n\n    return <div>\n        {reviews.length > 0 ? (<ul>\n                {reviews.map(review => {\n                    return <li key={review.id}> \n                        <h2>Author:{review.author}</h2>\n                        <p>{review.content}</p>\n                </li>\n            }) }\n        </ul>) : (\n                <p>We don't have any reviews for this moies</p>\n            )}\n       \n    </div>\n}\nexport default Reviews;","import styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\ncolor: black;\ntext-decoration: none;\ndisplay: block;\nmargin-bottom: 5px;\nborder: 1px solid gray;\nborder-radius:5px;\nwidth: 80px;\npadding: 2px 3px;\n`\nexport const DivDetails = styled.div`\ndisplay: flex;\ngap: 20px;\nmargin-bottom: 10px;\n`\nexport const Li = styled.li`\n\n`\nexport const DivInfo = styled.div`\n\npadding-bottom: 20px;\npadding-top: 1px;\nbox-shadow: 0 1px 10px gray;\n`","import Cast from '../Cast/Cast'\nimport Reviews from '../Reviews/Reviews'\nimport {Routes, Route , useParams, Link, useLocation } from \"react-router-dom\";\nimport { fetchDetailsApi } from '../../servise/movies.api';\nimport {  useEffect, useRef, useState } from \"react\";\nimport { BallTriangle } from 'react-loader-spinner';\nimport { DivDetails, DivInfo, Li, StyledLink } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [films, setFilms] = useState([]);\n  const [generes, setGeneres] = useState([]);\n  const { moviesId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n   const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n  \n\n  useEffect(() => {\n        fetchDetailsApi(moviesId).then(resp => {\n          setFilms(resp);\n          setGeneres(resp.genres)\n        \n        }).catch(error => setError(error.message))\n      .finally(() => setLoading(false))\n    \n  }, [moviesId]);\n  \n  return <>\n    {error && <h1>{error}</h1>}\n    <StyledLink to={backLink.current}>{'<- Go back'}</StyledLink>\n    {loading && <div><BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#4fa94d\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n          /></div>}\n    <DivDetails>\n      {!films.poster_path ? '' : <img src={`https://image.tmdb.org/t/p/w200/${films.poster_path}`} alt={films.title}/>}\n    <div>\n      <h2>{films.title ?? films.name}</h2>\n      <h3>Overview</h3>\n    <p>{films.overview}</p>\n    <h3>Generes</h3>\n      <ul>\n        { generes.map(film => {\n          return <Li key={film.id}>{film.name}</Li>\n        })}\n      </ul>\n    </div>\n    </DivDetails>\n    <DivInfo>\n      <h4>Additional information</h4>\n          <Link to=\"cast\">Cast</Link>\n          <Link to=\"reviews\">Reviews</Link>\n      \n       <Routes>\n        <Route path=\"cast\" element={<Cast castId={moviesId} />} />\n        <Route path=\"reviews\" element={<Reviews reviewsId={moviesId} />} ></Route>\n      </Routes>\n      </DivInfo>\n    </>\n}\nexport default MovieDetails;","const keyApi = 'bd090e5d17933448065d52d55259f1d4';\n\nconst fetchMoviesApi = () => {\n    return fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${keyApi}`)\n        .then(res => { if (res.ok) { return res.json() } })\n}\n\nconst fetchSearchApi = (query) => {\n    return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${keyApi}&query=${query}`)\n        .then(res => { if (res.ok) { return res.json() } })\n}\nconst fetchDetailsApi = (id) => {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${keyApi}`)\n        .then(res => { if (res.ok) { return res.json() } })\n}\nconst fetchImgApi = (id) => {\n    return fetch(`https://api.themoviedb.org/3/configuration?api_key=${keyApi}`)\n        .then(res => { if (res.ok) { return res.json() } })\n}\nconst fetchCreditsApi = (id) => {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${keyApi}`)\n        .then(res => { if (res.ok) { return res.json() } })\n}\nconst fetchReviewsApi = (id) => {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${keyApi}`)\n        .then(res => { if (res.ok) { return res.json() } })\n}\n\nexport {fetchMoviesApi, fetchSearchApi, fetchDetailsApi, fetchImgApi, fetchCreditsApi, fetchReviewsApi } ;"],"names":["_ref","castId","_useState","useState","_useState2","_slicedToArray","actors","setActors","useEffect","fetchCreditsApi","then","resp","cast","_jsx","children","map","actor","_jsxs","profile_path","width","src","concat","alt","original_name","character","id","reviewsId","reviews","setReviews","fetchReviewsApi","results","length","review","author","content","StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","DivDetails","_templateObject2","Li","_templateObject3","DivInfo","_templateObject4","_location$state$from","_location$state","_films$title","films","setFilms","_useState3","_useState4","generes","setGeneres","moviesId","useParams","location","useLocation","backLink","useRef","state","from","_useState5","_useState6","error","setError","_useState7","_useState8","loading","setLoading","fetchDetailsApi","genres","catch","message","finally","_Fragment","to","current","BallTriangle","height","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","poster_path","title","name","overview","film","Routes","Route","path","element","Cast","Reviews","keyApi","fetchMoviesApi","fetch","res","ok","json","fetchSearchApi","query"],"sourceRoot":""}